/* istanbul ignore file */

import { cloneDeep } from 'lodash/fp';
import unMaskPhoneField from '@bbb-app/utils/unMaskPhoneField';
import getEncodedValue from '@bbb-app/utils/getEncodedValue';
import {
  eventTypeConst,
  genderConst,
} from './../../../../components/Pages/Registry/CreateRegistry/CreateRegistryUtils';

/**
 * Config for Baby Registry Type
 */
export const registryInputFieldsBaby = {
  CoRegistrantEmail: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'CoRegistrantEmail',
    id: 'DC1500021',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  CoRegistrantFirstName: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'CoRegistrantFirstName ',
    id: 'DC1500019',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  CoRegistrantLastName: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'CoRegistrantLastName',
    id: 'DC1500020',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  MobileNumber: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'MobileNumber',
    id: 'DC1500018',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  PhoneNumber: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'PhoneNumber',
    id: 'DC1300001',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: true,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: false,
  },
  babyExpectedArivalDate: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'babyExpectedArivalDate',
    id: 'DC1500017',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: true,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: false,
  },
  babyGender: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'babyGender',
    id: 'DC1500014',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  babyName: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'babyName',
    id: 'DC1500015',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  confirmPassword: {
    autoCheck: false,
    displayOnForm: false,
    fieldName: 'confirmPassword',
    id: 'DC1300003',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: true,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  favoriteStore: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'favoriteStore',
    id: 'DC1500027',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  futureShippingDate: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'futureShippingDate',
    id: 'DC1500025',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  networkAffiliation: {
    autoCheck: true,
    displayOnForm: true,
    fieldName: 'networkAffiliation',
    id: 'DC1300004',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  nurseryTheme: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'nurseryTheme',
    id: 'DC1500016',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  showContactAddress: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'showContactAddress',
    id: 'DC1500022',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: true,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: false,
  },
  showFutureShippingAddr: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'showFutureShippingAddr',
    id: 'DC1500024',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: true,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: false,
  },
  showShippingAddress: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'showShippingAddress',
    id: 'DC1500023',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: true,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: false,
  },
  showerDate: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'showerDate',
    id: 'DC1300002',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  useContactAddrAsShippingAddr: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'useContactAddrAsShippingAddr',
    id: 'DC1500026',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
};

/**
 * Config for Other Registry Type
 */
export const registryInputFieldsOther = {
  CoRegistrantEmail: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'CoRegistrantEmail',
    id: 'DC1400016',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  CoRegistrantFirstName: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'CoRegistrantFirstName ',
    id: 'DC1200001',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: true,
  },
  CoRegistrantLastName: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'CoRegistrantLastName',
    id: 'DC1400015',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: true,
  },
  MobileNumber: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'MobileNumber',
    id: 'DC1500001',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  PhoneNumber: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'PhoneNumber',
    id: 'DC1300001',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: true,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: false,
  },
  confirmPassword: {
    autoCheck: false,
    displayOnForm: false,
    fieldName: 'confirmPassword',
    id: 'DC1500013',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: true,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: false,
  },
  eventDate: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'eventDate',
    id: 'Wedding_eventDate',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: true,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: true,
  },
  favoriteStore: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'favoriteStore',
    id: 'DC1500012',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  futureShippingDate: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'futureShippingDate',
    id: 'DC1500011',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  networkAffiliation: {
    autoCheck: true,
    displayOnForm: true,
    fieldName: 'networkAffiliation',
    id: 'DC1300006',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  numberOfGuests: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'numberOfGuests',
    id: 'DC1500005',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: true,
  },
  showContactAddress: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'showContactAddress',
    id: 'DC1500007',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: true,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: true,
  },
  showFutureShippingAddr: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'showFutureShippingAddr',
    id: 'DC1500009',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: true,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: false,
  },
  showShippingAddress: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'showShippingAddress',
    id: 'DC1500008',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: true,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: true,
  },
  showerDate: {
    autoCheck: false,
    displayOnForm: false,
    fieldName: 'showerDate',
    id: 'DC1500006',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  useContactAddrAsShippingAddr: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'useContactAddrAsShippingAddr',
    id: 'DC1500010',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  college: {
    autoCheck: false,
    displayOnForm: false,
    fieldName: 'college',
    id: 'DC1600003',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
};

/**
 * Config for HouseWarming registry Type
 */
const HWConfig = cloneDeep(registryInputFieldsOther);
export const registryInputFieldsHouseWarming = HWConfig;

/**
 * Config for Commitment Ceremony Registry Type
 */
const COMConfig = cloneDeep(registryInputFieldsOther);
COMConfig.CoRegistrantFirstName.requiredInputCreate = true;
COMConfig.CoRegistrantLastName.requiredInputCreate = true;
COMConfig.numberOfGuests.requiredInputCreate = true;
export const registryInputFieldsCommitment = COMConfig;

/**
 * Config for College registry Type
 */
const CollegeConfig = cloneDeep(registryInputFieldsOther);
CollegeConfig.numberOfGuests.displayOnForm = false;
CollegeConfig.CoRegistrantEmail.displayOnForm = false;
CollegeConfig.CoRegistrantFirstName.displayOnForm = false;
CollegeConfig.CoRegistrantLastName.displayOnForm = false;
CollegeConfig.college.displayOnForm = true;
CollegeConfig.college.requiredInputCreate = true;
CollegeConfig.college.requiredInputUpdate = true;
export const registryInputFieldsCollege = CollegeConfig;

/**
 * Config for Wedding Registry Type
 */
export const registryInputFieldsWedding = {
  CoRegistrantEmail: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'CoRegistrantEmail',
    id: 'DC1400016',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  CoRegistrantFirstName: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'CoRegistrantFirstName ',
    id: 'DC1200001',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: true,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: true,
  },
  CoRegistrantLastName: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'CoRegistrantLastName',
    id: 'DC1400015',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: true,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: true,
  },
  MobileNumber: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'MobileNumber',
    id: 'DC1500001',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  PhoneNumber: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'PhoneNumber',
    id: 'DC1300001',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: true,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: false,
  },
  confirmPassword: {
    autoCheck: false,
    displayOnForm: false,
    fieldName: 'confirmPassword',
    id: 'DC1500013',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: true,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: false,
  },
  eventDate: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'eventDate',
    id: 'Wedding_eventDate',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: true,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: true,
  },
  favoriteStore: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'favoriteStore',
    id: 'DC1500012',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  futureShippingDate: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'futureShippingDate',
    id: 'DC1500011',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  networkAffiliation: {
    autoCheck: true,
    displayOnForm: true,
    fieldName: 'networkAffiliation',
    id: 'DC1300006',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  numberOfGuests: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'numberOfGuests',
    id: 'DC1500005',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: true,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: true,
  },
  showContactAddress: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'showContactAddress',
    id: 'DC1500007',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: true,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: true,
  },
  showFutureShippingAddr: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'showFutureShippingAddr',
    id: 'DC1500009',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: true,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: false,
  },
  showShippingAddress: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'showShippingAddress',
    id: 'DC1500008',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: true,
    requiredInputUpdate: true,
    requiredToMakeRegPublic: true,
  },
  showerDate: {
    autoCheck: false,
    displayOnForm: false,
    fieldName: 'showerDate',
    id: 'DC1500006',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
  useContactAddrAsShippingAddr: {
    autoCheck: false,
    displayOnForm: true,
    fieldName: 'useContactAddrAsShippingAddr',
    id: 'DC1500010',
    inputType: 'FreeForm',
    registryOptionVO: [],
    requiredForListCreate: false,
    requiredInputCreate: false,
    requiredInputUpdate: false,
    requiredToMakeRegPublic: false,
  },
};

export const registryConfig = {
  Hide_RegistryThirdPartySearch_Flag: 'false',
  enableAutoFill: 'true',
  enableEmailOptIn: false,
};

export const submitRegistryData = (
  regState,
  eventType,
  registryID,
  eventTypeCode
) => {
  const {
    firstName,
    lastName,
    coFirstName,
    coLastName,
    thirdPartySelected,
    babyNurseryTheme,
    babyMaidenName,
    qasContactValidated,
    qasShippingValidated,
    storedValueOptIn,
    groupGiftOptIn,
  } = regState;
  const mobilePhValue = unMaskPhoneField(regState.mobilePh);
  const primaryPhValue = unMaskPhoneField(regState.primaryPh);
  const networkAffiliation = thirdPartySelected ? 'Y' : 'N';
  const makePublic = regState.isPublic === '1';
  const isCoRegistrant =
    regState.coRegProfileStatus === 'true' ? regState.iscoRegEmailFlag : false;
  const isModalOpen = !(regState.coRegProfileStatus === 'true')
    ? regState.iscoRegEmailFlag
    : false;
  const formaData = {
    'sessionBean.registryTypesEvent': eventTypeCode,
    'registryVO.registryId': registryID,
    'registryVO.coRegistrant.firstName': coFirstName,
    'registryVO.primaryRegistrant.cellPhone': mobilePhValue,
    'registryVO.primaryRegistrant.firstName': firstName,
    'registryVO.primaryRegistrant.lastName': lastName,
    'registryVO.primaryRegistrant.babyMaidenName': babyMaidenName,
    'registryVO.primaryRegistrant.contactAddress.firstName': firstName,
    'registryVO.primaryRegistrant.contactAddress.lastName': lastName,
    'registryVO.primaryRegistrant.primaryPhone': primaryPhValue,
    'value.mobileNumber': primaryPhValue,
    'registryVO.refStoreContactMethod': ' ', // Should be Blank as not used
    'registryVO.registryType.registryTypeName': eventTypeCode,
    updateSimplified: true,
    'registryVO.prefStoreNum': regState.prefStoreNum,
    'registryVO.primaryRegistrant.contactAddress.addressLine1':
      regState.addressOne,
    'registryVO.primaryRegistrant.contactAddress.addressLine2':
      regState.apartment,
    'registryVO.primaryRegistrant.contactAddress.city': regState.city,
    'registryVO.primaryRegistrant.contactAddress.state': regState.state,
    'registryVO.primaryRegistrant.contactAddress.zip': regState.zip,
    'registryVO.primaryRegistrant.contactAddress.poBoxAddress': '',
    'registryVO.primaryRegistrant.contactAddress.qasValidated': qasContactValidated,
    'registryVO.shipping.shippingAddress.addressLine1':
      regState.shippingAddressOne,
    'registryVO.shipping.shippingAddress.addressLine2':
      regState.shippingApartment,
    'registryVO.shipping.shippingAddress.city': regState.shippingCity,
    'registryVO.shipping.shippingAddress.firstName': firstName,
    'registryVO.shipping.shippingAddress.lastName': lastName,
    'registryVO.shipping.shippingAddress.state': regState.shippingState,
    'registryVO.shipping.shippingAddress.country': regState.shippingCountry,
    'registryVO.shipping.shippingAddress.qasValidated': qasShippingValidated,
    regContactAddress: regState.isContactAddressChanged
      ? 'newPrimaryRegAddress'
      : '',
    shippingAddress:
      regState.shippingStreet &&
      regState.showShippingInfo &&
      regState.addressOne !== regState.shippingAddressOne
        ? 'newShippingAddress'
        : 'shipAdrressSameAsRegistrant',
    futureShippingAddress:
      regState.showMoveInInfo && regState.isMovingSoonChanged
        ? 'newFutureShippingAddress'
        : '',
    'registryVO.shipping.shippingAddress.zip': regState.shippingZip,
    'registryVO.shipping.shippingAddress.poBoxAddress': '',
    'registryVO.shipping.futureShippingAddress.addressLine1':
      regState.moveInAddressOne,
    'registryVO.shipping.futureShippingAddress.addressLine2':
      regState.moveInApartment,
    'registryVO.shipping.futureShippingAddress.city': regState.moveInCity,
    'registryVO.shipping.futureShippingAddress.firstName': firstName,
    'registryVO.shipping.futureShippingAddress.lastName': lastName,
    'registryVO.shipping.futureShippingAddress.state': regState.moveInState,
    'registryVO.shipping.futureShippingAddress.country': regState.moveInCountry,
    'registryVO.shipping.futureShippingAddress.qasValidated':
      regState.qasMovingValidated,
    'registryVO.shipping.futureShippingAddress.zip': regState.moveInZip,
    'registryVO.shipping.futureShippingAddress.poBoxAddress': '',
    'registryVO.shipping.futureShippingDate': regState.futureShippingDate,
    futureShippingDateSelected: regState.showMoveInInfo,
    'registryVO.coRegistrant.email': getEncodedValue(regState.coEmail),
    'registryVO.primaryRegistrant.email': getEncodedValue(regState.email),
    'registryVO.networkAffiliation': networkAffiliation,
    'registryVO.event.guestCount': regState.guests,
    'registryVO.event.babyGender':
      regState.babyGender === '' ? genderConst.SURPRISE : regState.babyGender,
    'registryVO.coRegistrant.lastName': coLastName,
    'registryVO.event.eventDate': regState.eventDate,
    'registryVO.event.showerDate': regState.showerDate,
    'registryVO.regBG': regState.gender,
    'registryVO.coRegBG': regState.coGender,
    'registryVO.event.babyNurseryTheme': babyNurseryTheme,
    'registryVO.coRegOwner': regState.coRegOwner,
    makeRegistryPublic: makePublic,
    deactivateRegistry: false,
    coRegEmailFoundPopupStatus: isCoRegistrant,
    coRegEmailNotFoundPopupStatus: isModalOpen,
    'registryVO.event.college': regState.college,
    showChecklist: regState.showChecklist,
  };
  if (storedValueOptIn !== undefined)
    Object.assign(formaData, { storedValueOptIn });
  if (groupGiftOptIn !== undefined)
    Object.assign(formaData, { groupGiftingOptIn: groupGiftOptIn });
  return formaData;
};

export const registryInputMap = new Map([
  [eventTypeConst.WEDDING, registryInputFieldsWedding],
  [eventTypeConst.BABY, registryInputFieldsBaby],
  [eventTypeConst.COMMITMENT, registryInputFieldsCommitment],
  [eventTypeConst.HOUSEWARMING, registryInputFieldsHouseWarming],
  [eventTypeConst.COLLEGE, registryInputFieldsCollege],
]);
